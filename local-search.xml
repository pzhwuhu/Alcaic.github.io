<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>P1课下</title>
    <link href="/2024/10/06/P1%E8%AF%BE%E4%B8%8B/"/>
    <url>/2024/10/06/P1%E8%AF%BE%E4%B8%8B/</url>
    
    <content type="html"><![CDATA[<p>就是写篇博客记录下自己的做题过程&amp;心得，并非题解，如果寻求题解的朋友可以移步讨论区或者其他dalao的博客哟 <span class="github-emoji" alias="smile" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8">&#x1f604;</span></p><h1 id="Q1-Splitter"><a href="#Q1-Splitter" class="headerlink" title="Q1 Splitter"></a>Q1 Splitter</h1><p>题面：使用 Verilog 搭建一个 32位  Splitter , 给定一个 32位 的二进制数作为输入，将其划分为 四个 8位 的二进制数作为输出<br>纯复习题，就是按部就班地将input的 四个 8位 二进制数作为 四个 输出的驱动即可<br>可悲的是，本人第一遍竟然把 32 位的 Input写成了input 数组 <span class="github-emoji" alias="point_down" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f447.png?v8">&#x1f447;</span></p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs verilog"># wrong<br><span class="hljs-keyword">input</span> A [<span class="hljs-number">31</span>:<span class="hljs-number">0</span>],<br># correct<br><span class="hljs-keyword">input</span> [<span class="hljs-number">31</span>:<span class="hljs-number">0</span>] A，<br></code></pre></td></tr></table></figure><p>果然，还是太久不写verilog，生疏了（<del>其实就是菜</del>）<span class="github-emoji" alias="cry" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f622.png?v8">&#x1f622;</span></p><h1 id="Q2-ALU"><a href="#Q2-ALU" class="headerlink" title="Q2 ALU"></a>Q2 ALU</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>使用 Verilog 搭建一个 32 位六运算 ALU 并提交。具体模块端口定义如下：（看到这个表格才发现我Q1的弱智错误似乎就是因为题目的描述是A [31:0] (<del>疯狂找借口</del>) <span class="github-emoji" alias="stuck_out_tongue_closed_eyes" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f61d.png?v8">&#x1f61d;</span></p><p><img src="/../img_post/P1/p1_1.png" alt=" "></p><p>模块功能如下：</p><p><img src="/../img_post/P1/p1_2.png" alt=" "></p><h2 id="知识复习："><a href="#知识复习：" class="headerlink" title="知识复习："></a>知识复习：</h2><p>在这里我们需要复习逻辑右移和算术右移的区别：</p><p>逻辑右移不考虑符号位，右移一位，左边补零即可。</p><p>算术右移需要考虑符号位，右移一位，若符号位为 1 ，在左边补 1 ；否则，补 0 。</p><p>例如，8 位二进制数 10111101 分别右移2位。</p><ul><li>逻辑右移结果为<strong>00</strong>101111</li><li>算术右移结果为<strong>11</strong>101111</li></ul><p><strong>提示</strong>：可以回Pre中的<a href="http://cscore.buaa.edu.cn/tutorial/verilog/verilog-3/verilog-3-7/">这一小节</a>好好复习了，注意**$signed()**的用法</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>其他的没什么说的，照搬功能描述，需要注意的是最后一个op, <strong>A有符号</strong> ，B无符号</p><p>如果直接三目运算符加$signed(A) &gt;&gt;&gt; B,则根据符号原则（最外层确定，向内传播），会把结果变为无符号数，这显然达不到我们想要的结果</p><p>因此，采取Pre中的一种推荐方案“对于复杂的表达式避免使用 <code>$signed()</code> ，如果希望使用 <code>$signed()</code> 可以将这一部分抽离出来单独作为一个变量”</p><p>意即单独定义一个wire型变量作为$signed(A) &gt;&gt;&gt; B</p><p>注意到这点后，本题应该没什么难度了，最后，贴上俺的代码</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs verilog"><span class="hljs-keyword">module</span> alu (<br>    <span class="hljs-keyword">input</span> [<span class="hljs-number">31</span>:<span class="hljs-number">0</span>] A,<br>    <span class="hljs-keyword">input</span> [<span class="hljs-number">31</span>:<span class="hljs-number">0</span>] B,<br>    <span class="hljs-keyword">input</span> [<span class="hljs-number">2</span>:<span class="hljs-number">0</span>] ALUOp,<br>    <span class="hljs-keyword">output</span> [<span class="hljs-number">31</span>:<span class="hljs-number">0</span>] C<br>);<br>    <span class="hljs-keyword">wire</span> [<span class="hljs-number">31</span>:<span class="hljs-number">0</span>] tmp;<br>    <span class="hljs-keyword">assign</span> tmp =  <span class="hljs-built_in">$signed</span>(A) &gt;&gt;&gt; B;<br>    <span class="hljs-keyword">assign</span> C = (ALUOp == <span class="hljs-number">3&#x27;b000</span>) ? (A + B) :<br>               (ALUOp == <span class="hljs-number">3&#x27;b001</span>) ? (A - B) :<br>               (ALUOp == <span class="hljs-number">3&#x27;b010</span>) ? (A &amp; B) :<br>               (ALUOp == <span class="hljs-number">3&#x27;b011</span>) ? (A | B) :<br>               (ALUOp == <span class="hljs-number">3&#x27;b100</span>) ? (A &gt;&gt; B) :<br>               (ALUOp == <span class="hljs-number">3&#x27;b101</span>) ? tmp :<br>                <span class="hljs-number">0</span>;<br>    <br><span class="hljs-keyword">endmodule</span><br></code></pre></td></tr></table></figure><p><strong>结语</strong></p><p>本蒟蒻只做了两道目前，先上传到博客主要是测试一下代码块的风格设置是否成功以及其他功能，后续还会更新本篇 <span class="github-emoji" alias="yum" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60b.png?v8">&#x1f60b;</span></p>]]></content>
    
    
    <categories>
      
      <category>CO</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CO</tag>
      
      <tag>Verilog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>My fist blog</title>
    <link href="/2024/10/05/My-fist-blog/"/>
    <url>/2024/10/05/My-fist-blog/</url>
    
    <content type="html"><![CDATA[<h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><p>经过了大概一天的努力，<strong>个人博客终于搭建好了！</strong><del>虽然很简陋（后续会不断完善）</del> 采用的是hexo架构和fluid主题<br>这一天下来，也不容易啊，走了不少弯路，踩了很多坑，不断地上网查阅资料，也有很多自己摸索的地方，磕磕绊绊的过程中也有不少收获。</p><h1 id="感想"><a href="#感想" class="headerlink" title="感想"></a>感想</h1><h2 id="还好有个国庆假让我有时间花一整天搭建博客（其实是暑假纯玩去了）"><a href="#还好有个国庆假让我有时间花一整天搭建博客（其实是暑假纯玩去了）" class="headerlink" title="还好有个国庆假让我有时间花一整天搭建博客（其实是暑假纯玩去了）"></a>还好有个国庆假让我有时间花一整天搭建博客<del>（其实是暑假纯玩去了）</del></h2><h2 id="接下来还需要学习的地方"><a href="#接下来还需要学习的地方" class="headerlink" title="接下来还需要学习的地方"></a>接下来还需要学习的地方</h2><ul><li>了解git的用法</li><li>尝试将fluid主题的代码块修改为Mac风格<del>纯粹是为了装</del></li><li>写物理笔记并上传博客</li><li>写P1课下并写一篇心得</li></ul><h1 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h1><ol><li><a href="https://hexo.fluid-dev.com/docs/start/">Fluid主题官方介绍文档</a> 全中文文档</li><li><a href="https://zhuanlan.zhihu.com/p/371995929">知乎大神的博客搭建指南</a> 手把手教学</li><li>各位学长学姐，正是看了你们的博客，才想建一个自己的，motivation了算是</li></ol>]]></content>
    
    
    <categories>
      
      <category>-日常</category>
      
    </categories>
    
    
    <tags>
      
      <tag>-碎碎念</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
